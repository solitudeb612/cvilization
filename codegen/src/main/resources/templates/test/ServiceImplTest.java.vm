package ${package}.${moduleName}.impl;


import com.alibaba.fastjson.JSON;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;


/**
 * 测试${className}Impl
 */
@RunWith
@SpringBootTest
public class ${className}ServiceImplTest {
    @Autowired
    ${className}Service ${classname}Service;

    /**
     * 获取用户信息
     */
    @Test
    public void setUp() {
        PowerMockito.mockStatic(SecurityUtils.class);
        Collection<? extends GrantedAuthority> authorities = new ArrayList<>();
        user = new PigxUser(1, 1, 1, "admin", "88888888", true
                , true, true, true, authorities);
        PowerMockito.mockStatic(SecurityUtils.class);
        PowerMockito.when(SecurityUtils.getUser()).thenReturn(user);//4.预设静态类返回值
    }

    /**
     * 新增
     */
    @Test
    public void save() {
        ${className} ${classname} =new ${className}();
	    ${classname}.se
        ${classname}Service.save(${classname});
        Assert.assertNotNull(${classname}.ge);
        fail("请实现${className}ServiceImplTest 新增" );
    }

    /**
     * 修改
     */
    @Test
    public void editMapper() {
        ${className} ${classname} =${classname}Service.getById();
    	${classname}.se
        ${classname}Service.updateById(${classname});
        Assert.assertNotNull(${classname}.ge);
        fail("请实现${className}ServiceImplTest 修改" );
    }

    /**
     * 通过id查询
     */
    @Test
    @Transactional
    public void getMapper() {
        ${className} ${classname} = ${classname}Service.getById();
        System.out.println(JSON.toJSONString(${classname}));
        fail("请实现${className}ServiceImplTest Id查询" );
    }

    /**
     * 删除
     */
    @Test
    public void delMapper() {
        boolean result = ${classname}Service.removeById();
        fail("请实现${className}ServiceImplTest 删除" );
    }
}
